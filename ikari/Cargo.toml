[package]
name = "ikari"
version.workspace = true
edition.workspace = true
description.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
authors.workspace = true
publish = false

[lib]
name = "ikari"
path = "src/lib.rs"

[features]
default = ["audio"]
tracy-profiling = ["profiling/profile-with-tracy"]
gpu-profiling = []
audio = ["oddio", "cpal", "symphonia"]

[dependencies]
bytemuck = { version = "1", features = ["derive"] }
half = { version = "2.4.1", features = ["serde"] }
pollster.workspace = true
twox-hash = "1.6"
lazy_static.workspace = true
smallvec = { version = "1.13", features = ["union", "const_generics"] }
anyhow.workspace = true
chrono = { version = "0.4.38", default-features = false, features = [
    "std",
    "wasmbind",
    "clock",
] }
web-time = "1.1.0"
async-std = "1.12.0"

# log
console = "0.15"
env_logger.workspace = true
log.workspace = true

# profiling
profiling.workspace = true
wgpu-profiler.workspace = true

# assets
gltf.workspace = true
image.workspace = true
obj-rs = "0.7"

# rendering
wgpu.workspace = true
# wgpu = { path = "../../wgpu/wgpu" }
winit.workspace = true

# math
rand.workspace = true
rapier3d-f64 = "0.21"
glam.workspace = true
approx = "0.5"

# audio
cpal = { git = "https://github.com/RustAudio/cpal.git", rev = "6c3d11b8f6af5c6202278560860a8c565162fd51", optional = true }
oddio = { version = "0.6", optional = true }
symphonia = { version = "0.5.4", features = [
    "all-codecs",
    "all-formats",
    "opt-simd",
], optional = true }

# UI
iced.workspace = true
iced_wgpu.workspace = true
iced_winit.workspace = true

wasm_thread = { version = "0.3", features = ["es_modules"] }
futures-intrusive = "0.5.0"
rmp-serde = "1.3.0"
serde = "1.0.204"
miniz_oxide = "0.7.4"
byte-unit = "5.1"
bitvec = "1.0.1"
base64 = "0.22"
urlencoding = "2.1.3"
size = "0.4.1"
bevy_mikktspace = "0.14"
gloo-net = "0.5.0"
spin = { version = "0.9.8", default-features = false, features = [
    "spin_mutex",
] }
spin_sleep = "1.2.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
basis-universal = "0.3.1"

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = "0.3.64"
wasm-bindgen-futures.workspace = true
web-sys.workspace = true
getrandom = { version = "0.2.15", features = ["js"] }
wasm-bindgen.workspace = true
cpal = { git = "https://github.com/RustAudio/cpal.git", rev = "6c3d11b8f6af5c6202278560860a8c565162fd51", optional = true, features = [
    "wasm-bindgen",
] }
